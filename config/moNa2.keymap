#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mc {
            bindings = <&mkp MB3>;
            key-positions = <18 17>;
            layers = <7>;
        };

        raycast {
            bindings = <&kp LA(LEFT_SHIFT)>;
            key-positions = <37 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mac: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "NEW_MACRO";
        };

        winP: win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "WIN";
        };

        winF: winF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 3>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "WINF";
        };

        test: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 3>,
                <&macro_wait_time 500>,
                <&tog_on 4>;

            label = "TEST";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: sensorRotateMouseWheelUpDown {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
            label = "mouse";
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_Mac {
            bindings = <
&kp LG(F)             &kp ESC                &kp L           &kp U           &kp F                                          &kp LC(SPACE)  &kp W              &kp R                &kp Y    &kp P
&kp Q                 &mt LEFT_CONTROL E     &mt LEFT_ALT I  &mt LEFT_GUI A  &mt LEFT_SHIFT O                   &kp RG(A)   &kp K          &mt RIGHT_SHIFT T  &mt RIGHT_COMMAND N  &lt 7 S  &lt 7 H
&mt LG(V) LG(C)       &kp Z                  &kp X           &kp C           &kp V             &kp LG(Z)        &kp RG(F)   &kp G          &kp D              &kp M                &lt 8 J  &kp B
&kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &none           &kp DELETE      &lt 4 ENTER       &kp BACKSPACE    &lt 10 TAB  &lt 2 SPACE                                                     &lt_to_layer_0 8 A
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        default_layer_Win {
            bindings = <
&kp LC(F)             &kp ESC                &kp L           &kp U               &kp F                                          &kp LG(SPACE)  &kp W              &kp R                &kp Y    &kp P
&kp Q                 &mt LEFT_GUI E         &mt LEFT_ALT I  &mt LEFT_CONTROL A  &mt LEFT_SHIFT O                   &kp RC(A)   &kp K          &mt RIGHT_SHIFT T  &mt RIGHT_CONTROL N  &lt 7 S  &lt 7 H
&mt LC(V) LC(C)       &kp Z                  &kp X           &kp C               &kp V             &kp LC(Z)        &kp RC(F)   &kp G          &kp D              &kp M                &lt 8 J  &kp B
&kp LC(LEFT_BRACKET)  &kp LC(RIGHT_BRACKET)  &none           &kp DELETE          &lt 4 ENTER       &kp BACKSPACE    &lt 10 TAB  &lt 3 SPACE                                                     &lt_to_layer_0 8 A
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1_mac {
            bindings = <
&trans    &trans                &kp TILDE              &kp CARET      &kp GRAVE                                  &kp F1  &kp DOLLAR             &kp PLUS     &trans         &kp PERCENT
&kp HASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND  &kp SINGLE_QUOTE                   &trans  &trans  &mt RIGHT_SHIFT EQUAL  &lt 5 MINUS  &kp SLASH      &kp QMARK
&trans    &kp LT                &kp GT                 &kp AT_SIGN    &kp PIPE          &trans           &trans  &trans  &kp ASTERISK           &kp UNDER    &kp BACKSLASH  &kp EXCLAMATION
&trans    &trans                &trans                 &trans         &kp PERIOD        &kp SEMICOLON    &trans  &trans                                                     &kp F12
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        layer_1_win {
            bindings = <
&trans    &trans      &kp LS(EQUAL)  &kp CARET         &kp LS(AT_SIGN)                           &kp GRAVE  &kp LS(NUMBER_4)       &kp COLON     &trans       &kp LS(N5)
&kp HASH  &kp LS(N8)  &kp LS(N9)     &kp LS(NUMBER_6)  &kp LS(N7)                        &trans  &trans     &mt RIGHT_SHIFT EQUAL  &lt 6 MINUS   &kp SLASH    &kp QMARK
&trans    &kp LT      &kp GT         &kp LBKT          &kp LS(INT_YEN)  &trans           &trans  &trans     &kp LS(SQT)            &kp LS(BSLH)  &kp INT_YEN  &kp LS(N1)
&trans    &trans      &trans         &trans            &kp PERIOD       &kp SEMICOLON    &trans  &trans                                                       &kp F12
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        layer_2_mac {
            bindings = <
&none      &trans  &kp PAGE_UP              &kp UP_ARROW                 &kp HOME                                                     &kp CARET         &kp N7                    &kp N8                          &kp N9                  &kp RIGHT_PARENTHESIS
&trans     &trans  &mt LEFT_ALT LEFT_ARROW  &mt LEFT_CONTROL DOWN_ARROW  &mt LEFT_SHIFT RIGHT_ARROW                   &kp UNDERSCORE  &kp EXCLAMATION   &mt RIGHT_SHIFT NUMBER_4  &mt RG(RIGHT_CONTROL) NUMBER_5  &mt RIGHT_ALT NUMBER_6  &mt RIGHT_GUI NUMBER_0
&kp LG(X)  &trans  &kp PAGE_DOWN            &trans                       &kp END                     &kp LC(LS(Z))    &trans          &kp LEFT_BRACKET  &kp NUMBER_1              &kp NUMBER_2                    &kp NUMBER_3            &kp BACKSLASH
&trans     &trans  &trans                   &trans                       &trans                      &trans           &kp DOT         &kp EQUAL                                                                                           &kp PIPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3_mac {
            bindings = <
&trans  &trans            &trans             &trans  &trans                                     &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &kp LS(NUMBER_2)                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans  &trans            &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans             &trans  &kp COMMA         &kp LC(COLON)    &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP>;
        };

        layer_3_win {
            bindings = <
&trans  &trans             &trans                    &trans  &trans                           &trans  &trans  &trans  &trans  &trans
&trans  &kp RIGHT_BRACKET  &kp LS(NON_US_BACKSLASH)  &trans  &kp LS(N2)               &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp UNDERSCORE     &kp RIGHT_BRACE           &trans  &trans      &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &trans                    &trans  &kp COMMA   &kp COLON    &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &kp LA(M)  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &mkp MB1  &mkp MB2   &mo 7   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &none     &none      &mo 8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                               &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL_mac {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans                &trans                 &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                &trans                 &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL_win {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans                &trans                 &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                &trans                 &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_7 {
            bindings = <
&kp CAPSLOCK    &kp F1  &kp F2  &kp F3   &kp F4                     &trans          &trans            &trans        &trans         &trans
&kp KP_NUMLOCK  &kp F5  &kp F6  &kp F7   &kp F8             &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp RIGHT_GUI  &trans
&kp SCROLLLOCK  &kp F9  &kp T   &kp F11  &kp F12  &trans    &trans  &trans          &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2   &trans
&mac            &winP   &winF   &trans   &trans   &trans    &trans  &trans                                                         &trans
            >;
        };
    };
};
